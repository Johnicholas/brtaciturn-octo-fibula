input int KEY_DOWN;
input int KEY_UP;
input void UPDATE;

output (int, int, int) NEW_BUNNY;
output int FREE_BUNNY;
output int SPIN_BUNNY;
output (int, int, int) SET_BUNNY_POSITION;
output int NEW_SPLASH;
output int FREE_SPLASH;

class Channel with
  event void ok;
do
  await FOREVER;
end

class KeyIsDown with
  var bool up = false, left = false, right = false, down = false;
do
  par do
    loop do
      var int which = await KEY_DOWN;
      if which == 37 then
        left = true;
      else/if which == 38 then
        up = true;
      else/if which == 39 then
        right = true;
      else/if which == 40 then
        down = true;
      end
    end
  with
    loop do
      var int which = await KEY_UP;
      if which == 37 then
        left = false;
      else/if which == 38 then
        up = false;
      else/if which == 39 then
        right = false;
      else/if which == 40 then
        down = false;
      end
    end
  end
end

class SpinBunny with
  var int id;
  var int x;
  var int y;
  var bool& should_spin;
do
  emit NEW_BUNNY => (id, x, y);
  finalize with
    emit FREE_BUNNY => id;
  end
  every UPDATE do
    if should_spin then
      emit SPIN_BUNNY => id;
    end
  end
end

class PlayerBunny with
  var int id;
  var int x;
  var int y;
  var KeyIsDown& key_is_down;
  var Channel& game_over;
  event void ok;
do
  emit NEW_BUNNY => (id, x, y);
  finalize with
    emit FREE_BUNNY => id;
  end
  loop do
    await UPDATE;
    if key_is_down.up and y > 0 then
      y = y - 1;
    end
    if key_is_down.down and y < 400 then
      y = y + 1;
    end
    if key_is_down.left then
      if x > 0 then
        x = x - 1;
      else
        _printf("PlayerBunny failure\n");
        emit game_over.ok;
        await FOREVER;
      end
    end
    if key_is_down.right then
      if x < 600 then
        x = x + 1;
      else
        _printf("PlayerBunny success\n");
        break;
      end
    end
    emit SET_BUNNY_POSITION => (id, x, y);
  end
  _printf("PlayerBunny done\n");
  emit ok;
end

class Minigame with
  var KeyIsDown& key_is_down;
  var Channel& game_over;
  event void ok;
do
  var SpinBunny up with
    this.id = 1;
    this.x = 200;
    this.y = 100;
    this.should_spin = &key_is_down.up;
  end;

  var SpinBunny left with
    this.id = 2;
    this.x = 100;
    this.y = 200;
    this.should_spin = &key_is_down.left;
  end;

  var SpinBunny right with
    this.id = 3;
    this.x = 300;
    this.y = 200;
    this.should_spin = &key_is_down.right;
  end;

  do PlayerBunny with
    this.id = 4;
    this.x = 200;
    this.y = 300;
    this.key_is_down = &key_is_down;
    this.game_over = &game_over;
  end;

  _printf("Minigame over!\n");
end

class Delay with
  var int ticks = 100;
  event void ok;
do
  var int ticker = 0;
  loop do
    await UPDATE;
    if ticker < ticks then
      ticker = ticker + 1;
    else
      break;
    end
  end
  emit ok;
end

class Splash with
  var int which;
  var int ticks = 100;
  event void ok;
do
  emit NEW_SPLASH => which;
  finalize with
    emit FREE_SPLASH => which;
  end;
  do Delay with
    this.ticks = ticks;
  end;
  emit ok;
end

class Konami with
  event void ok;
do
  loop do
    var int which = await KEY_DOWN;
    if which != 38 then continue; end
    which = await KEY_DOWN;
    if which != 38 then continue; end
    which = await KEY_DOWN;
    if which != 40 then continue; end
    which = await KEY_DOWN;
    if which != 40 then continue; end
    which = await KEY_DOWN;
    if which != 37 then continue; end
    which = await KEY_DOWN;
    if which != 39 then continue; end
    which = await KEY_DOWN;
    if which != 37 then continue; end
    which = await KEY_DOWN;
    if which != 39 then continue; end
    which = await KEY_DOWN;
    if which != 66 then continue; end
    which = await KEY_DOWN;
    if which != 65 then continue; end
    break;
  end
  emit ok;
end

var KeyIsDown key_is_down;

loop do
  var Channel game_over;
  par/or do
    await game_over.ok;
  with
    do Konami;
  with
    do Splash with
      this.which = 0;
    end;
    do Minigame with
      this.key_is_down = &key_is_down;
      this.game_over = &game_over;
    end;
    do Splash with
      this.which = 1;
    end;
    do Minigame with
      this.key_is_down = &key_is_down;
      this.game_over = &game_over;
    end;
    do Splash with
      this.which = 2;
    end;
    do Minigame with
      this.key_is_down = &key_is_down;
      this.game_over = &game_over;
    end;
    do Splash with
      this.which = 3;
    end;
  end
end

